---------------------------------------------------------------------
1. JSX là gì:
- Là javascript XML
- Gần giống với HTML, giúp ta không cần phải dử dụng createElement 
để code giao diện, vì sử dụng createElement thì rất khó
- Cần có JavaScript và Babel (chuyển đổi về ES5) để dùng JSX
- có thể viết đan xen javascript
- Demo online: https://bit.ly/2VOIMN7

- VD1:
const reactCourse = 'REactJs Basic';

const ul = <ul className="courses-list">
	<li style={{color:'red'}}>JavaScript</li>
	<li>{reactCourse}</li>
</ul>


---Không sử dụng JSX ta phải viết:
const reactCourse = 'React Basic';

const ul = React.createElement(
			'ul',
			{className:'courses-list'},
			React.createElement(
				'li',
				{
					style: {
						color:'red'
					}
				},
				'JavaScript'
			),
			React.createElement('li',null, reactCourse)
		);
		
- VD2:
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		const reactCourse = 'REactJs Basic';
		const courses = [
			{
				name: 'HTML, CSS'
			},
			{
				name: 'Responsive web design'
			},
			{
				name: 'REactJs'
			}
		]

		const ul = <ul className="courses-list">
			<li style={{color:'red'}}>JavaScript</li>
			{courses.map(course,index => 
				<li key={index}>{course.name}</li>
			)}
		</ul>
		
		ReactDOM.render(ul,document.getElementById('root'));
	</script>
  </body>
</html>

Note: JSX không hỗ trợ render 2 element cùng cấp, bắt buộc phải có 
một wrapper. Lý do:
VD:
---đây là 2 element cùng cấp h1 và h2, cú pháp này sai khi render
const jsx = (
	<h1>Heading 1</h1>
	<h2>Heading 2</h2>
)

---ta thử convert nó sang react:
const jsx = (
	React.createElement('h1',null,'Heading 1')
	React.createElement('h2',null,'Heading 2')
)

=> ta thấy ngay ta không thể viết như thế này
Solution: tạo một wrap để chứa 2 element này

VD:
const jsx = (
	<React.Fragment>
		<h1>Heading 1</h1>
		<h2>Heading 2</h2>
	</React.Fragment>
)

---ta thử convert nó sang react:
const jsx = React.createElement(
		React.Fragment,
		null,
		React.createElement('h1',null,'Heading 1'),
		React.createElement('h2',null,'Heading 2')
	)
=> cấu trúc hoàn toàn quen thuộc =))
ReactDOM.render(jsx,root);

---------------------------------------------------------------
------------------------------------------------------------------
2. React Element Types:
- Gồm: string, function/class (chia component => ngắn gọn,tái sử dụng)
+ wrapper
    - header component
	- content component
	- footer component

- VD	
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='app'></div>
	<script type="text/babel">
		fucntion Header(){
			return (
				<div className="header">Header</div>
			)
		}
		
		class Content extends React.Component{
			render(){
				return (
					<div className="content">New Content</div>
				)
			}
		}
		
		//function Content(){
		//	return (
		//		<div className="content">Content</div>
		//	)
		//}
		
		fucntion Footer(){
			return (
				<div className="footer">Footer</div>
			)
		}
		
		const app = (
			<div className="wrapper">
				<Header />
				<Content />
				<Footer />
			</div>
		)
		
		ReactDOM.render(app,document.getElementById('app'));
	</script>
  </body>
</html>

- Bài tập:
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		//// PostItem.js
		function PostItem(){
			return (
				<div className="post-item">
					<img src="https://gamek.mediacdn.vn/133514250583805952/2021/10/10/ty3-1633855940616616044131.jpg"
						 alt="Waifu" />
					<h2 className="post-title">C#(.Net)</div>
					<p className="post-desc">Bạn có kiến thức ngôn ngữ c#</p>
					<p className="post-published">Một ngày trước - 5 phút</p>
				</div>
			)
		}
		//// App.js
		function App(){
			return (
				<div id="wrapper">
					<PostItem />
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>

---------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
3. Props là gì? Dùng Props khi nào?
- Là một object chứa các thuộc tính mô tả cho React Element
- React Element:
++ Sử dụng props giống như với attribute của thẻ HTML
++ 2 props (attribute) class, for(trong thẻ lable,...) => className, htmlFor
++ Phải tuân theo quy tắc có sẵn

- React component:
++ Sử dụng props như đối số của component
++ Tự do đặt tên props
	- Đặt theo camelCase
	- Có thể bao gồm dấu gạch ngang
- Chú ý:
++ Prop "key" là props đặc biệt
++ Props cơ bản là đối số của component
=> Props có thể là bất cứ kiểu dữ liệu gì
++ Sử dụng Destructuring

-- VD
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		//// PostItem.js
		function PostItem(props){
			return (
				<div className="post-item">
					<img src={props.image}
						 alt={props.alt} />
					<h2 className="post-title">{props.title}</div>
					<p className="post-desc">{props.description}</p>
					<p className="post-published">{props.publishedAt}</p>
				</div>
			)
		}
		//// App.js
		function App(){
			return (
				<div id="wrapper">
					<PostItem 
						image:"https://gamek.mediacdn.vn/133514250583805952/2021/10/10/ty3-1633855940616616044131.jpg"
						alt:"Waifu"
						title:"C#(.Net)"
						description: "Bạn có kiến thức ngôn ngữ c#"
						publishedAt: "Một ngày trước - 5 phút"
					/>
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>

-------------------------------------------------------------------------
------------------------------------------------------------------------
4. Quy ước đặt tên:
- Viết hoa ký tự đầu
- VD1: Chọn component trong 1 object
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		
		const Form = {
			Input(){
				return <input />
			}
			
			Checkbox(){
				return <input type="checkbox" />
			}
		}
		
		//// App.js
		function App(){
			const type="Input";
			
			const Component = Form[type];
			
			return (
				<div id="wrapper">
					<Component />
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>

- VD2:
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		function Button({title,href,onClick}){
			let Component = 'button';
			
			if(href) {
				Component = 'a';
				props.href = href;
			}
			
			if(onClick){
				props.onClick=onClick;
			}
			return(
				<Component {...props}>{title}</button>
			)
		}
		
		//// App.js
		function App(){
			return (
				<div id="wrapper">
					<Button 
						title="click me!"
						href="https://fullstack.edu.vn/"
						onClick={() => console.log(Math.random())}
					/>
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>

VD3: toán tử logic: boolean, null và underfine không được render
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		//// App.js
		//// AND
		function App(){
		 let firstAccess = true
			return (
				<div id="wrapper">
					{firstAccess &&<h1>Welcome to F8</h1> }
				</div>
			)
		}
		
		//// OR
		//fucntion App({title}){
		//	return(
		//		<div id="wrapper">
		//			<h1>{title || 'Giá trị mặc định'}</h1>
		//		</div>
		//	)
		//}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
		//ReactDOM.render(<App title="Welcome back!"/>,document.getElementById('root'));
	</script>
  </body>
</html>

-------------------------------------------------------------------
-----------------------------------------------------------------------------
4. Children props? Render props?
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		//function Button({title,primary}){
		//	console.log(primary); //true
		//
		//	return <button>{title}</button>
		//}
		
		function Input({lable,...inputProps}){
			return(
				<div>
					<lable>{lable}</lable>
					input {...inputProps} />
				</div>
			)
		}
	
		//// children props
		function Button({children}){
			return <button>{children}</button>
		}
	
		//// App.js
		function App(){
			const title = "Hello world!"
			return (
				<div id="wrapper">
					//<Button primary title={title} />
					//<Input 
					//	lable="Full name"
					//	type="Text"
					//	placeholder="Enter name..."
					//	title="Đây là input"
					//	onFocus={
					//		() => {console.log(Math.random())}
					//	}
					///>
					
					<Button>Click me!</Button> // string literal
					//<Button>{true && Click me!}</Button> // {expression}
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>

VD2: Render props
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>React DOM</title>
	<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
	<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
	<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
  </head>
  <body>
	<div id='root'></div>
	<script type="text/babel">
		function List({data, children}){
			return (
				<ul>
					//{data.map(item => <li key={item}>{item}</li>)}
					{data.map((...props) => children(...props))}
				</ul>
			)
		}
	
		//// App.js
		function App(){
			const cars = ['BMW','Honda','Mazda'];
			
			return (
				<div id="wrapper">
					//<List data={cars}/>
					<List data={cars}>
						{(item,index) => <li key={index}>{item}</li>}
					</List>
				</div>
			)
		}
		
		//// index.js
		ReactDOM.render(<App />,document.getElementById('root'));
	</script>
  </body>
</html>